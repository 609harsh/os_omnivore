controllers:
  main:
    enabled: false
  api:
    enabled: true
    type: deployment
    strategy: Recreate
    containers:
      api:
        image:
          repository: sejaeger/omnivore-api
          tag: 54ccbd4
          pullPolicy: IfNotPresent
        env:
          API_ENV: local
          PG_HOST: postgres.postgres.svc.cluster.local
          PG_USER: app_user
          PG_DB: omnivore
          PG_PORT: 5432
          PG_POOL_MAX: 20
          CLIENT_URL: https://omnivore.example.com
          GATEWAY_URL: http://omnivore-api:8080/api
          ES_URL: http://elasticsearch.elasticsearch.svc.cluster.local:9200
          ES_USERNAME: elastic
        envFrom:
          - secretRef:
              name: omnivore-image-proxy-secret
          - secretRef:
              name: omnivore-jwt-secret
          - secretRef:
              name: omnivore-sso-jwt-secret
          - secretRef:
              name: omnivore-pg-password
          - secretRef:
              name: elasticsearch-auth-secret
          - secretRef:
              name: omnivore-content-fetch-token
    initContainers:
      migrate:
        image:
          repository: sejaeger/omnivore-migrate
          tag: 54ccbd4
          pullPolicy: IfNotPresent
        command: ["/bin/sh", "-c", "--"]
        args: ["./packages/db/setup.sh"]
        env:
          PG_HOST: postgres.postgres.svc.cluster.local
          PG_USER: app_user
          PG_DB: omnivore
          NO_DEMO_USER: 1
        envFrom:
          - secretRef:
              name: omnivore-pg-password
          - secretRef:
              name: postgres-admin-user-and-password

  web:
    enabled: true
    type: deployment
    strategy: Recreate
    containers:
      web:
        image:
          repository: sejaeger/omnivore-web
          tag: 54ccbd4
          pullPolicy: IfNotPresent

  content-fetch:
    enabled: true
    type: deployment
    strategy: Recreate
    containers:
      content-fetch:
        image:
          repository: sejaeger/omnivore-content-fetch
          tag: 54ccbd4
          pullPolicy: IfNotPresent
        env:
          REST_BACKEND_ENDPOINT: http://omnivore-api:8080/api
        envFrom:
          - secretRef:
              name: omnivore-jwt-secret
          - secretRef:
              name: omnivore-content-fetch-token

service:
  main:
    enabled: false
  api:
    controller: api
    ports:
      http:
        port: 8080
  web:
    controller: web
    ports:
      http:
        port: 8080
  content-fetch:
    controller: content-fetch
    ports:
      http:
        port: 8080
