plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id("com.apollographql.apollo3") version "3.8.2"
}

def keystorePropertiesFile = rootProject.file("app/external/keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "app.omnivore.omnivore"
        minSdk 26
        targetSdk 34
        versionCode 188
        versionName "0.0.188"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias 'key0'
            storeFile file('external/omnivore-prod.keystore')
            storePassword keystoreProperties['prodStorePassword']
            keyPassword keystoreProperties['prodKeyPassword']
        }
        debug {
            if (keystoreProperties['demoStorePassword'] && keystoreProperties['demoKeyPassword']) {
                keyAlias 'androiddebugkey'
                storeFile file('external/omnivore-demo.keystore')
                storePassword keystoreProperties['demoStorePassword']
                keyPassword keystoreProperties['demoKeyPassword']
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            buildConfigField("String", "OMNIVORE_API_URL", "\"https://api-demo.omnivore.app\"")
            buildConfigField("String", "OMNIVORE_WEB_URL", "\"https://demo.omnivore.app\"")
            buildConfigField("String", "OMNIVORE_GAUTH_SERVER_CLIENT_ID", "\"267918240109-eu2ar09unac3lqqigluknhk7t0021b54.apps.googleusercontent.com\"")
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField("String", "OMNIVORE_API_URL", "\"https://api-prod.omnivore.app\"")
            buildConfigField("String", "OMNIVORE_WEB_URL", "\"https://omnivore.app\"")
            buildConfigField("String", "OMNIVORE_GAUTH_SERVER_CLIENT_ID", "\"687911924401-lq8j1e97n0sv3khhb8g8n368lk4dqkbp.apps.googleusercontent.com\"")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.8"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace "app.omnivore.omnivore"
}

dependencies {
    def nav_version = ""

    implementation("androidx.core:core-ktx:1.12.0")
    implementation("androidx.appcompat:appcompat:1.6.1")
    implementation("com.google.android.gms:play-services-base:18.3.0")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.7.0")

    // Compose
    def composeBom = platform('androidx.compose:compose-bom:2024.01.00')
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.ui:ui:")
    implementation("androidx.compose.material:material")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material:material-icons-extended")
    implementation("androidx.activity:activity-compose:1.8.2")
    implementation("androidx.navigation:navigation-compose:2.7.6")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    // Testing
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")


    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
    // ViewModel utilities for Compose
    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")

    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    implementation("androidx.compose.runtime:runtime-livedata:1.6.0")

    // Saved state module for ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'

    implementation "androidx.security:security-crypto:1.0.0"
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Dagger - Hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt("com.google.dagger:hilt-compiler:$hilt_version")

    implementation("com.apollographql.apollo3:apollo-runtime:3.8.2")



    implementation("com.google.android.gms:play-services-auth:20.7.0")
    implementation("com.google.accompanist:accompanist-systemuicontroller:0.34.0")
    implementation("com.google.accompanist:accompanist-flowlayout:0.32.0")

    implementation("io.coil-kt:coil-compose:2.5.0")

    implementation("com.google.code.gson:gson:2.10")
    implementation("com.pspdfkit:pspdfkit:8.9.1")

    implementation("com.posthog.android:posthog:2.0.3")
    implementation("io.intercom.android:intercom-sdk:15.1.0")

    // Room Deps
    implementation("androidx.room:room-runtime:$room_version")
    implementation("androidx.room:room-ktx:$room_version")
    annotationProcessor("androidx.room:room-compiler:$room_version")
    kapt("androidx.room:room-compiler:$room_version")

    implementation("com.github.jeziellago:compose-markdown:0.3.3")
    implementation("io.github.dokar3:chiptextfield-m3:0.6.5")
}

apollo {
    packageName.set "app.omnivore.omnivore.graphql.generated"
}

task printVersion {
    doLast {
        println "omnivoreVersion: ${android.defaultConfig.versionName}"
    }
}
